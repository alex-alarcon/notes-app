{"version":3,"sources":["constants/colors.js","store/noteContext.jsx","store/notesContext.jsx","components/Button/index.jsx","components/Radio/index.jsx","components/NoteEditor/index.jsx","containers/ModalNoteEditor/index.jsx","components/Note/index.jsx","components/NoteList/index.jsx","containers/App/index.jsx","serviceWorker.js","index.jsx"],"names":["colors","ORANGE","YELLOW","GRAY","BLUE","RED","initialState","note","body","color","COLORS","isOpen","preview","reducer","state","_ref","type","payload","Object","objectSpread","NoteContext","React","createContext","Consumer","persistenceSettings","key","notes","concat","createdAt","Date","updatedAt","filter","id","map","NotesContext","init","Button","className","onClick","disabled","children","rest","objectWithoutProperties","react_default","a","createElement","assign","defaultProps","RadioButton","value","checked","onChange","htmlFor","style","borderColor","marginTop","marginLeft","NoteEditor","onTextChange","onRadioChange","onSave","onPreview","onCancel","inputRef","useRef","useEffect","current","focus","noteEditorClasses","dangerouslySetInnerHTML","__html","marked","placeholder","rows","ref","keys","components_Radio","components_Button","trim","setOptions","sanitize","ModalNoteEditor","_useContext","useContext","addNote","editNote","_useContext2","updateNote","resetNote","showPreview","handleTextChange","useCallback","event","target","handleRadioChange","handleSave","newNote","Fragment","lib_default","onRequestClose","closeTimeoutMS","content","backgroundColor","border","top","right","bottom","left","padding","width","height","pointerEvents","components_NoteEditor","dateConfig","year","month","day","Note","onEdit","removeNote","handleRemoveNote","noteClasses","toLocaleDateString","NoteList","showNote","noteList","length","components_Note","Modal","setAppElement","App","containers_ModalNoteEditor","components_NoteList","Boolean","window","location","hostname","match","app","_ref2","_usePersistReducer","usePersistReducer","_usePersistReducer2","slicedToArray","dispatch","Provider","_useReducer","useReducer","_useReducer2","containers_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3bde8b4.chunk.js","sourcesContent":["export default {\n  ORANGE: 'bg-orange-300',\n  YELLOW: 'bg-yellow-200',\n  GRAY: 'bg-gray-300',\n  BLUE: 'bg-blue-200',\n  RED: 'bg-red-200'\n};\n","import React, { useCallback, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport COLORS from '../constants/colors';\n\nconst initialState = {\n  note: { body: '', color: COLORS.YELLOW },\n  isOpen: false,\n  preview: false\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'UPDATE_NOTE':\n      return { ...state, note: payload.note };\n    case 'RESET_NOTE':\n      return initialState;\n    case 'ADD_NOTE':\n      return {\n        ...state,\n        isOpen: true,\n        preview: false\n      };\n    case 'SHOW_PREVIEW':\n      return {\n        ...state,\n        preview: !state.preview\n      };\n    case 'SHOW_NOTE':\n      return {\n        note: payload.note,\n        isOpen: true,\n        preview: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst NoteContext = React.createContext(initialState);\n\nfunction NoteProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const updateNote = useCallback(newNote => {\n    dispatch({\n      type: 'UPDATE_NOTE',\n      payload: {\n        note: newNote\n      }\n    });\n  }, []);\n\n  const resetNote = useCallback(() => {\n    dispatch({\n      type: 'RESET_NOTE'\n    });\n  }, []);\n\n  const addNote = useCallback(() => {\n    dispatch({\n      type: 'ADD_NOTE'\n    });\n  }, []);\n\n  const showPreview = useCallback(() => {\n    dispatch({\n      type: 'SHOW_PREVIEW'\n    });\n  }, []);\n\n  const showNote = useCallback(note => {\n    dispatch({\n      type: 'SHOW_NOTE',\n      payload: { note }\n    });\n  }, []);\n\n  return (\n    <NoteContext.Provider\n      value={{\n        showPreview,\n        showNote,\n        updateNote,\n        resetNote,\n        addNote,\n        ...state\n      }}\n    >\n      {children}\n    </NoteContext.Provider>\n  );\n}\n\nNoteProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst NoteConsumer = NoteContext.Consumer;\n\nexport { NoteContext, NoteProvider, NoteConsumer };\n","import React, { useCallback } from 'react';\nimport { usePersistReducer } from 'use-persist';\nimport PropTypes from 'prop-types';\n\nconst persistenceSettings = {\n  key: 'notes'\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'ADD_NOTE':\n      return {\n        ...state,\n        notes: state.notes.concat({\n          ...payload.note,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        })\n      };\n    case 'DELETE_NOTE':\n      return {\n        ...state,\n        notes: state.notes.filter(note => note.id !== payload.id)\n      };\n    case 'EDIT_NOTE':\n      return {\n        ...state,\n        notes: state.notes.map(note => {\n          if (note.id === payload.note.id) {\n            return { ...payload.note, updatedAt: new Date() };\n          }\n          return note;\n        })\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = { notes: [] };\n\nconst NotesContext = React.createContext(initialState);\n\nconst init = state => {\n  return {\n    notes: state.notes.map(note => {\n      return {\n        ...note,\n        createdAt: new Date(note.createdAt),\n        updatedAt: new Date(note.updatedAt)\n      };\n    })\n  };\n};\n\nfunction NotesProvider({ children }) {\n  const [state, dispatch] = usePersistReducer(\n    persistenceSettings,\n    reducer,\n    initialState,\n    init\n  );\n\n  const addNote = useCallback(\n    note => {\n      dispatch({\n        type: 'ADD_NOTE',\n        payload: {\n          note\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const removeNote = useCallback(\n    id => {\n      dispatch({\n        type: 'DELETE_NOTE',\n        payload: {\n          id\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const editNote = useCallback(\n    note => {\n      dispatch({\n        type: 'EDIT_NOTE',\n        payload: {\n          note\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <NotesContext.Provider value={{ state, addNote, removeNote, editNote }}>\n      {children}\n    </NotesContext.Provider>\n  );\n}\n\nNotesProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst NotesConsumer = NotesContext.Consumer;\n\nexport { NotesContext, NotesProvider, NotesConsumer };\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nfunction Button({ className, onClick, disabled, children, ...rest }) {\n  return (\n    <button\n      type=\"button\"\n      className={`p-2 ${className}`}\n      onClick={onClick}\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\n\nButton.defaultProps = {\n  className: '',\n  onClick: () => {},\n  disabled: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport './index.css';\n\nfunction RadioButton({ id, value, checked, onChange }) {\n  return (\n    <label\n      className={`w-4 h-4 border relative inline-block rounded mx-1 ${value} cursor-pointer`}\n      htmlFor={id}\n      style={{\n        borderColor: 'rgba(134,134,134,0.6)'\n      }}\n    >\n      <input\n        id={id}\n        className=\"absolute appearance-none\"\n        type=\"radio\"\n        value={value}\n        checked={checked}\n        onChange={onChange}\n      />\n      <i\n        className=\"fas fa-check absolute text-xs \"\n        style={{ marginTop: 2, marginLeft: 1, color: 'rgba(134,134,134,0.4)' }}\n      />\n    </label>\n  );\n}\n\nRadioButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nRadioButton.defaultProps = {\n  checked: false,\n  onChange() {}\n};\n\nexport default RadioButton;\n","/* eslint-disable react/no-danger */\nimport marked from 'marked';\nimport { PropTypes } from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\n\nimport './index.css';\n\nimport Button from '../Button';\nimport RadioButton from '../Radio';\n\nimport COLORS from '../../constants/colors';\n\nmarked.setOptions({\n  sanitize: true\n});\n\nfunction NoteEditor({\n  note,\n  preview,\n  onTextChange,\n  onRadioChange,\n  onSave,\n  onPreview,\n  onCancel\n}) {\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [preview]);\n\n  const noteEditorClasses = `w-3/5 max-w-xl mx-auto p-4 rounded shadow-md ${note.color} pointer-events-auto`;\n\n  return (\n    <div className={noteEditorClasses}>\n      {preview ? (\n        <div\n          className=\"NoteEditor__Preview\"\n          dangerouslySetInnerHTML={{\n            __html: marked(note.body)\n          }}\n        />\n      ) : (\n        <textarea\n          placeholder=\"What do you want to write?\"\n          rows={5}\n          className=\"w-full bg-transparent resize-none outline-none\"\n          value={note.body}\n          onChange={onTextChange}\n          ref={inputRef}\n        />\n      )}\n\n      <div className=\"border-t border-b border-gray-500 items-center flex py-2 mt-4\">\n        {Object.keys(COLORS).map(color => {\n          const id = `radio-${COLORS[color]}`;\n          return (\n            <RadioButton\n              id={id}\n              value={COLORS[color]}\n              checked={note.color === COLORS[color]}\n              onChange={onRadioChange}\n              key={id}\n            />\n          );\n        })}\n      </div>\n      <div className=\"flex justify-between my-2\">\n        <div>\n          <Button onClick={onCancel}>Cancel</Button>\n        </div>\n        <div>\n          <Button onClick={onPreview} className=\"mr-2\">\n            Preview\n          </Button>\n          <Button\n            onClick={onSave}\n            disabled={note.body.trim() === ''}\n            className=\"rounded px-4 bg-gray-alpha hover:bg-gray-500\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nNoteEditor.propTypes = {\n  note: PropTypes.shape({\n    id: PropTypes.number,\n    body: PropTypes.string,\n    color: PropTypes.string\n  }),\n  preview: PropTypes.bool.isRequired,\n  onTextChange: PropTypes.func.isRequired,\n  onRadioChange: PropTypes.func.isRequired,\n  onPreview: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\n\nNoteEditor.defaultProps = {\n  note: {\n    id: +new Date(),\n    body: '',\n    color: COLORS.YELLOW\n  }\n};\n\nexport default NoteEditor;\n","import React, { useCallback, useContext } from 'react';\nimport Modal from 'react-modal';\n\nimport './index.css';\n\nimport { NoteContext } from '../../store/noteContext';\nimport { NotesContext } from '../../store/notesContext';\n\nimport NoteEditor from '../../components/NoteEditor';\n\nfunction ModalNoteEditor() {\n  const { addNote, editNote } = useContext(NotesContext);\n  const {\n    note,\n    updateNote,\n    resetNote,\n    showPreview,\n    preview,\n    isOpen\n  } = useContext(NoteContext);\n\n  const handleTextChange = useCallback(\n    event => updateNote({ ...note, body: event.target.value }),\n    [note, updateNote]\n  );\n\n  const handleRadioChange = useCallback(\n    event =>\n      updateNote({\n        ...note,\n        color: event.target.value\n      }),\n    [note, updateNote]\n  );\n\n  const handleSave = useCallback(() => {\n    if (note.id) {\n      editNote(note);\n    } else {\n      const newNote = { ...note, id: +new Date() };\n      addNote(newNote);\n    }\n    resetNote();\n  }, [addNote, editNote, note, resetNote]);\n\n  return (\n    <React.Fragment>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={resetNote}\n        closeTimeoutMS={500}\n        style={{\n          content: {\n            backgroundColor: 'transparent',\n            border: 'none',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            padding: 0,\n            width: '100vw',\n            height: '100vh',\n            pointerEvents: 'none'\n          }\n        }}\n      >\n        <div className=\"table w-full h-full\">\n          <div className=\"table-cell align-middle\">\n            <NoteEditor\n              note={note}\n              preview={preview}\n              onTextChange={handleTextChange}\n              onRadioChange={handleRadioChange}\n              onSave={handleSave}\n              onPreview={showPreview}\n              onCancel={resetNote}\n            />\n          </div>\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default ModalNoteEditor;\n","import { PropTypes } from 'prop-types';\nimport React, { useCallback, useContext } from 'react';\n\nimport { NotesContext } from '../../store/notesContext';\n\nimport Button from '../Button';\n\nconst dateConfig = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric'\n};\n\nfunction Note({ note, onEdit }) {\n  const { removeNote } = useContext(NotesContext);\n  const handleRemoveNote = useCallback(() => {\n    removeNote(note.id);\n  }, [note.id, removeNote]);\n\n  const noteClasses = `w-full p-4 rounded shadow-md ${note.color}`;\n\n  return (\n    <div className={noteClasses}>\n      <div className=\"flex justify-between border-b border-gray-300 pb-2 mb-2\">\n        <div>\n          <p className=\"text-xxs uppercase font-medium\">created at:</p>\n          <p className=\"text-xs uppercase\">\n            {note.createdAt.toLocaleDateString('es-CO', dateConfig)}\n          </p>\n        </div>\n\n        <div>\n          <p className=\"text-xxs uppercase font-medium\">updated at:</p>\n          <p className=\"text-xs uppercase\">\n            {note.updatedAt.toLocaleDateString('es-CO', dateConfig)}\n          </p>\n        </div>\n      </div>\n      <pre className=\"Note__Body\">{note.body}</pre>\n      <div className=\"flex justify-end\">\n        <Button\n          className=\"text-sm mr-2 hover:bg-red-200 rounded\"\n          onClick={handleRemoveNote}\n        >\n          Remove\n        </Button>\n        <Button\n          className=\"bg-gray-300 hover:bg-gray-400 shadow rounded\"\n          onClick={onEdit}\n        >\n          Edit\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  note: PropTypes.shape({\n    id: PropTypes.number,\n    body: PropTypes.string\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired\n};\n\nexport default Note;\n","import React, { useContext } from 'react';\n\nimport './index.css';\n\nimport { NoteContext } from '../../store/noteContext';\nimport { NotesContext } from '../../store/notesContext';\n\nimport Note from '../Note';\nimport Button from '../Button';\n\nfunction NoteList() {\n  const { showNote, addNote } = useContext(NoteContext);\n  const {\n    state: { notes }\n  } = useContext(NotesContext);\n\n  let noteList = <p>There are not notes </p>;\n\n  if (notes.length) {\n    noteList = notes.map(note => (\n      <Note note={note} key={note.id} onEdit={() => showNote(note)} />\n    ));\n  }\n\n  return (\n    <div className=\"flex flex-col m-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium\">Notes</h2>\n        <Button\n          className=\"bg-teal-300 hover:bg-teal-400 text-white text-sm font-medium rounded-lg shadow\"\n          onClick={addNote}\n        >\n          Add Note\n        </Button>\n      </div>\n      <div className=\"NoteList\">{noteList}</div>\n    </div>\n  );\n}\n\nexport default NoteList;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nimport ModalNoteEditor from '../ModalNoteEditor';\nimport NoteList from '../../components/NoteList';\n\nModal.setAppElement('#root');\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ModalNoteEditor />\n      <NoteList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { NotesProvider } from './store/notesContext';\nimport { NoteProvider } from './store/noteContext';\n\nconst app = (\n  <NotesProvider>\n    <NoteProvider>\n      <App />\n    </NoteProvider>\n  </NotesProvider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}